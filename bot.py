import os
import logging
from flask import Flask, request, jsonify
import telebot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è
user_styles = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def create_keyboard():
    markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('üé® –°—Ç–∏–ª–∏')
    btn2 = telebot.types.KeyboardButton('üì∏ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä')
    btn3 = telebot.types.KeyboardButton('‚ÑπÔ∏è –ü–æ–º–æ—â—å')
    markup.add(btn1, btn2, btn3)
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, 
        "üéâ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤!\n\n"
        "–ù–∞–∂–º–∏ '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä' –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ!",
        reply_markup=create_keyboard()
    )

@bot.message_handler(commands=['help'])
def help_cmd(message):
    bot.reply_to(message,
        "ü§ñ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
        "1. –ù–∞–∂–º–∏ '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä'\n"
        "2. –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ\n"
        "3. –ü–æ–ª—É—á–∏ —Å—Ç–∏–∫–µ—Ä!\n\n"
        "–ü–æ–∫–∞ —á—Ç–æ –±–æ—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –∫—Ä—É—Ç—ã–µ —Å—Ç–∏–∫–µ—Ä—ã! üé®"
    )

@bot.message_handler(func=lambda message: message.text == 'üì∏ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä')
def make_sticker(message):
    bot.reply_to(message, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞! üì∑")

@bot.message_handler(func=lambda message: message.text == 'üé® –°—Ç–∏–ª–∏')
def show_styles(message):
    styles_keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    styles_keyboard.add(
        telebot.types.KeyboardButton('üîÑ –ú—É–ª—å—Ç—è—à–Ω—ã–π'),
        telebot.types.KeyboardButton('üëæ –ü–∏–∫—Å–µ–ª—å-–∞—Ä—Ç'),
        telebot.types.KeyboardButton('üåà –ö–æ–Ω—Ç—É—Ä—ã'),
        telebot.types.KeyboardButton('üî• –í–∏–Ω—Ç–∞–∂–Ω—ã–π'),
        telebot.types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    bot.reply_to(message, "üé® –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –¥–ª—è –±—É–¥—É—â–∏—Ö —Å—Ç–∏–∫–µ—Ä–æ–≤:", reply_markup=styles_keyboard)

@bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
def back_to_main(message):
    bot.reply_to(message, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=create_keyboard())

@bot.message_handler(func=lambda message: message.text in ['üîÑ –ú—É–ª—å—Ç—è—à–Ω—ã–π', 'üëæ –ü–∏–∫—Å–µ–ª—å-–∞—Ä—Ç', 'üåà –ö–æ–Ω—Ç—É—Ä—ã', 'üî• –í–∏–Ω—Ç–∞–∂–Ω—ã–π'])
def set_style(message):
    user_styles[message.chat.id] = message.text
    bot.reply_to(message, 
        f"‚úÖ –í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å: {message.text}\n"
        f"–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏ '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä' –∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ!",
        reply_markup=create_keyboard()
    )

@bot.message_handler(func=lambda message: message.text == '‚ÑπÔ∏è –ü–æ–º–æ—â—å')
def show_help(message):
    help_cmd(message)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        file_info = bot.get_file(message.photo[-1].file_id)
        file_size = message.photo[-1].file_size
        selected_style = user_styles.get(message.chat.id, '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π')
        
        response = (
            f"üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!\n"
            f"–†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç\n"
            f"–°—Ç–∏–ª—å: {selected_style}\n\n"
        )
        
        if selected_style != '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π':
            response += f"üé® –ë—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω —Å—Ç–∏–ª—å: {selected_style}\n\n"
        
        response += (
            "üîÑ –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n"
            "–°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å—é –±–æ—Ç–∞ üí™"
        )
        
        bot.reply_to(message, response)
        
    except Exception as e:
        logger.error(f"Error: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ")

@bot.message_handler(func=lambda message: True)
def echo(message):
    bot.reply_to(message, 
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞! üì∑",
        reply_markup=create_keyboard()
    )

# –í–µ–±—Ö—É–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.route('/webhook/' + TOKEN, methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return 'OK', 200
    return 'Error', 403

@app.route('/')
def home():
    return "ü§ñ Sticker Bot is running with webhook!"

@app.route('/health')
def health():
    return "OK"

@app.route('/set_webhook')
def set_webhook():
    # –ü–æ–ª—É—á–∞–µ–º URL Render
    render_url = os.getenv('RENDER_EXTERNAL_URL')
    if not render_url:
        return "RENDER_EXTERNAL_URL not set"
    
    webhook_url = f"{render_url}/webhook/{TOKEN}"
    bot.remove_webhook()
    bot.set_webhook(url=webhook_url)
    return f"Webhook set to: {webhook_url}"

if __name__ == '__main__':
    print("üöÄ Starting bot with webhook...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    render_url = os.getenv('RENDER_EXTERNAL_URL')
    if render_url:
        webhook_url = f"{render_url}/webhook/{TOKEN}"
        bot.remove_webhook()
        bot.set_webhook(url=webhook_url)
        print(f"‚úÖ Webhook set to: {webhook_url}")
    else:
        print("‚ö†Ô∏è RENDER_EXTERNAL_URL not set, using polling")
        bot.remove_webhook()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask
    port = int(os.getenv('PORT', 10000))
    print(f"üåê Starting web server on port {port}...")
    app.run(host='0.0.0.0', port=port, debug=False)
