import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TOKEN:
    logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

logger.info("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º...")

try:
    from aiogram import Bot, Dispatcher, types, executor
    from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
    
    bot = Bot(token=TOKEN)
    dp = Dispatcher(bot)
    
    logger.info("Aiogram —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    
except ImportError as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    exit(1)

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    await message.answer("üéâ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ")

@dp.message_handler(commands=['test'])
async def test_cmd(message: types.Message):
    await message.answer("‚úÖ –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç! –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")

@dp.message_handler(content_types=['photo'])
async def handle_photo(message: types.Message):
    await message.answer("üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –§—É–Ω–∫—Ü–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞.")

@dp.message_handler()
async def echo(message: types.Message):
    await message.answer(f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}")

if __name__ == '__main__':
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    executor.start_polling(dp, skip_updates=True)
