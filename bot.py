import os
import logging
from flask import Flask
import telebot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

@app.route('/')
def home():
    return "ü§ñ Sticker Bot is running!"

@app.route('/health')
def health():
    return "OK"

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def create_keyboard():
    markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('üé® –°—Ç–∏–ª–∏')
    btn2 = telebot.types.KeyboardButton('üì∏ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä')
    btn3 = telebot.types.KeyboardButton('‚ÑπÔ∏è –ü–æ–º–æ—â—å')
    markup.add(btn1, btn2, btn3)
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, 
        "üéâ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤!\n\n"
        "–ù–∞–∂–º–∏ '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä' –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ!",
        reply_markup=create_keyboard()
    )

@bot.message_handler(commands=['help'])
def help_cmd(message):
    bot.reply_to(message,
        "ü§ñ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
        "1. –ù–∞–∂–º–∏ '–°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä'\n"
        "2. –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ\n"
        "3. –ü–æ–ª—É—á–∏ —Å—Ç–∏–∫–µ—Ä!\n\n"
        "–ü–æ–∫–∞ —á—Ç–æ –±–æ—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥—É—Ç –∫—Ä—É—Ç—ã–µ —Å—Ç–∏–∫–µ—Ä—ã! üé®"
    )

@bot.message_handler(func=lambda message: message.text == 'üì∏ –°–¥–µ–ª–∞—Ç—å —Å—Ç–∏–∫–µ—Ä')
def make_sticker(message):
    bot.reply_to(message, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞! üì∑")

@bot.message_handler(func=lambda message: message.text == 'üé® –°—Ç–∏–ª–∏')
def show_styles(message):
    bot.reply_to(message,
        "üé® –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏ (—Å–∫–æ—Ä–æ):\n"
        "‚Ä¢ –ú—É–ª—å—Ç—è—à–Ω—ã–π\n"
        "‚Ä¢ –ü–∏–∫—Å–µ–ª—å-–∞—Ä—Ç\n"
        "‚Ä¢ –ö–æ–Ω—Ç—É—Ä—ã\n"
        "‚Ä¢ –í–∏–Ω—Ç–∞–∂–Ω—ã–π\n"
        "‚Ä¢ –ë–µ–∑ —Ñ–æ–Ω–∞\n\n"
        "–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ! üì∏"
    )

@bot.message_handler(func=lambda message: message.text == '‚ÑπÔ∏è –ü–æ–º–æ—â—å')
def show_help(message):
    help_cmd(message)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        file_info = bot.get_file(message.photo[-1].file_id)
        file_size = message.photo[-1].file_size
        
        bot.reply_to(message,
            f"üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!\n"
            f"–†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç\n"
            f"ID: {file_info.file_id}\n\n"
            "üîÑ –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n"
            "–ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å /help"
        )
        
    except Exception as e:
        logger.error(f"Error: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ")

@bot.message_handler(func=lambda message: True)
def echo(message):
    bot.reply_to(message, 
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞! üì∑",
        reply_markup=create_keyboard()
    )

if __name__ == '__main__':
    print("üöÄ Starting basic sticker bot...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
    import threading
    def run_web():
        port = int(os.getenv('PORT', 10000))
        app.run(host='0.0.0.0', port=port, debug=False)
    
    web_thread = threading.Thread(target=run_web, daemon=True)
    web_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        print("ü§ñ Starting Telegram bot...")
        bot.infinity_polling()
    except Exception as e:
        print(f"‚ùå Bot error: {e}")
